apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.mltad.sdk.demo"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jni']
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            def fileName = outputFile.getName()
            if (outputFile != null && outputFile.name != null && outputFile.name.endsWith(".apk")) {
                if (variant.buildType.name == 'release') {
                    def versionName = variant.mergedFlavor.versionName
                    def flavor = variant.getFlavorName()
                    fileName = "bridgex_release_${flavor}_v${versionName}.apk"
                } else if (variant.buildType.name == 'debug') {
                    def versionName = variant.mergedFlavor.versionName
                    def flavor = variant.getFlavorName()
                    fileName = "bridgex_debug_${flavor}_v${versionName}.apk"
                }
                output.outputFileName = fileName
            }
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

//    implementation project(path: ':bridgex-dexloader')
    implementation project(path: ':bridgex-base')
    implementation project(path: ':bridgex-core')
    implementation project(path: ':bridgex-l')
//    compileOnly project(path: ':ads-hook')
//    implementation project(path: ':bridgex-arthook')

    //OkHttp
//    implementation 'com.squareup.okhttp3:okhttp:3.4.2'
//    implementation 'com.squareup.okio:okio:1.9.0'

    implementation "com.android.support:appcompat-v7:29.0.0"
    implementation 'com.android.support:recyclerview-v7:29.0.0'

//    implementation 'me.weishu:free_reflection:+'
//    implementation 'me.weishu.exposed:exposed-xposedapi:+'

//    implementation 'com.facebook.stetho:stetho:+'
//    implementation 'com.facebook.stetho:stetho-okhttp3:+'//okhttp3.0以上使用
//    implementation 'com.facebook.stetho:stetho-okhttp:+'
//    implementation 'com.facebook.stetho:stetho-urlconnection:+'
//    implementation 'com.facebook.stetho:stetho-js-rhino:+'

//    implementation(name: 'mlt-adsdk', ext: 'aar')
//    implementation(name: 'GDT-4.232.1102', ext: 'aar')
//    implementation(name: 'ks_adsdk-3.1.0', ext: 'aar')
//    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.18'//需要添加此包，否则无法正常使用穿山甲开屏广告
//    implementation(name: 'CSJ-3.1.0.3', ext: 'aar')
//    implementation(name: 'epic-core', ext: 'aar')

//    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'com.github.ChickenHook:RestrictionBypass:+'
}
